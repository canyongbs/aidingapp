name: CI

on:
  workflow_call:
    secrets:
      pat-token:
        required: true
  workflow_dispatch:

jobs:
  build-deps:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Setup Dependencies
        uses: ./.github/actions/composer-dependency-setup
  enforce-copyright:
    runs-on: ubuntu-22.04

    timeout-minutes: 10

    needs: [build-deps]

    steps:
      - name: Checkout code | Internal
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.pat-token }}

      - name: Checkout code | External
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Run Ruby Script
        run: ruby ./copyright.rb

      - name: Commit changes
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: >
            chore: fix enforcement of copyright on all files

      - name: Check for changes
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]' }}
        uses: tj-actions/verify-changed-files@v19
        with:
          fail-if-changed: 'true'
          files: '*'
  fix-code-style:
    runs-on: ubuntu-22.04

    timeout-minutes: 10

    needs: [build-deps, enforce-copyright]

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Checkout code | Internal
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.pat-token }}

      - name: Checkout code | External
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm install

      - name: Cache PHP CS Fixer
        uses: actions/cache@v4
        with:
          path: .php-cs-fixer.cache
          key: ${{ runner.OS }}-${{ github.repository }}-phpcsfixer-${{ github.sha }}
          restore-keys: |
            ${{ runner.OS }}-${{ github.repository }}-phpcsfixer-

      - name: Run Formatters
        run: composer format

      - name: Commit changes
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: >
            chore: fix code style

      - name: Check for changes
        if: ${{ github.event.pull_request.head.repo.full_name != github.repository || github.actor == 'dependabot[bot]' }}
        uses: tj-actions/verify-changed-files@v19
        with:
          fail-if-changed: 'true'
          files: '*'
  test:
    runs-on: ubuntu-22.04

    container: ubuntu:22.04

    env:
      DB_PORT: 5432
      DB_HOST: postgres
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: testing_landlord
      SCOUT_PREFIX: test_

    timeout-minutes: 15

    needs: [build-deps,enforce-copyright,fix-code-style]

    services:
      postgres:
        # Docker Hub image
        image: postgres:15
        # Provide the password for postgres
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: apt-get update ; apt-get install -y git zip unzip postgresql-client

      - name: Create tenant database
        run: psql -h postgres -d testing_landlord -U root -c 'CREATE DATABASE testing_tenant;'
        env:
           PGPASSWORD: root

      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: gd, gmp, redis

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        shell: bash

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm install

      - name: Build Assets
        run: npm run build

      - name: Generate key
        run: php artisan key:generate

      - name: Clear Config
        run: php artisan optimize:clear

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Check route integrity
        run: php artisan route:list

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test --configuration phpunit-ci.xml --parallel
  lint:
    runs-on: ubuntu-22.04

    timeout-minutes: 10

    needs: [build-deps,enforce-copyright,fix-code-style]

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Dependencies
        uses: ./.github/actions/composer-dependency-setup

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - run: npm install

      - name: Build Assets
        run: npm run build

      - name: Linting
        run: composer lint
